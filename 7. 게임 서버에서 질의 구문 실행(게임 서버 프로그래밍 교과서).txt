게임 서버에서 질의 구문 실행

데이터베이스를 게임 서버에서 액세스하려면, 여러분이 사용하고 있는 프로그래밍 언어에서
사용가능한 데이터베이스 연결 모듈 혹은 데이터베이스 클라이언트 모듈을 사용해야 합니다.

여기서는 특정 모듈에 의존하지 않고 모든 모듈의 공통된 사용법 위주로 설명하겠습니다.

게임 서버에서 데이터베이스에 액세스하려면 먼저 데이터베이스에 접속해야 합니다.
이를 위해 데이터베이스 연결 객체를 만들고, 이것으로 데이터베이스에 접속합니다. TCP 커넥션과
유사합니다.

데이터베이스에 접속할 때는 연결 문자열(connection string)이나 연결 정보 구조체를 넣어
주셔야 합니다. 연결 문자열이나 연결 정보 구조체에는 데이터베이스 서버의 주소, 사용할 데이터베이스
인스턴스의 이름, 연결에 사용할 사용자 DI와 비밀번호가 들어갑니다. 사용자 ID와 비밀번호는 게
임 서버에 자세가 사용하는 계정 이름인 경우가 일반적입니다. 데이터베이스 입장에서는 게임 서버
도 마치 가상 사용자 처럼 취급되기 때문입니다.

DbConnection db = new DbConnection(db);
cmd.Parameters[0] = 123;
cmd.Parameters[1] = 456;
cmd.Parameters[2] = 789;
cmd.Execute("insert into table1 (a, b, c)values (?, ?, ?));

이 두 가지 방법 중에서 두 번째 방법을 더 권장하는데 이유는 다음에서 설명하겟습니다.

저장 프로시저를 실행하려면 다음과 같이 매개변수를 지정하고, 저장 프로시저 이름과 함게
"실행하라" 라고 명령을 내립니다.

DbConnection db = new DbConnection(db);
cmd.Parameters[0] = 123;
cmd.Parameters[1] = 456;
cmd.Parameters[2] = 789;
cmd.Execute("InsertRecord");

저장 프로시저나 질의 구문을 실행했을 때의 레코드 값을 얻어 오고 싶으면 레코드를 지칭하는
객체, 즉 레코드셋 객체를 결과로 얻어 올 수 있습니다. 예를 들어 a가 123이상을 가진 레코드를 찾
는다면 다음과 같습니다.

DbConnection db = new DbConnection(db);
cmd.Parameters[0] = 123;
cmd.Execute("select (a, b, c) from table1 where a>=?");

이 select 구문으로 레코드를 0개 이상 얻어 옵니다. 그러면 얻어 온 레코드들을 순회하면서 내용을
꺼내 오면 됩니다(다음 예시에서 필드 c는 문자열 타입이라고 가정합니다).

foreach(DbRecord r inb rs)
{
	int a = r.GetField("a");
	int b = r.GetField("b");
	string c = r.GetField("c");
}

데이터베이스의 필드 값 타입은 숫자나 문자열입니다. 대부분 프로그래밍 언어의 기본 데이터 
타입과 비슷하지만 완전히 일치하지는 않습니다. 데이터베이스는 여러 프로그래밍 언어에서 사용
가능해야 합니다. 어떤 것은 최대 길이나 정밀도가 있는 데이터 타입도 있으며, 물론 null
값을 수용 가능한 것도 있습니다. 따라서 필드에 값을 읽거나 쓸 때 혹은 명령 객체에 매개변수를
넣거나 꺼내 올 때는 다음 추가 작업을 해야 합니다.

1. 값을 읽을 때는 읽은 값을 가지고 있는 객체, 즉 값 객체를 얻습니다.
2. 값 객체가 null인지 체크합니다. 그리고 값 객체의 실제 값을 원하는 값으로 변환합니다.

예를 들어 다음 코드와 같습니다.

DbVariable = r.GetField("a");
if(v.isNull() == false)
{
	int a = v.Convert(int);
}

좀 번거롭지만, 데이터베이스와 프로그래밍 언어가 완전히 일치하는 형식이 아니므로 어쩔 수 없습니다.

필드에 값을 넣을 때는 다음과 같이 해야 합니다.
1. 여러분이 원하는 값을 넣은 값 객체를 생성합니다.
2. 값 객체를 명령 객체나 레코드셋 객체에 넣습니다.

DbVariable v = new DbVariable(DbType.integer, 123);
record.SetField("a", v);
	

